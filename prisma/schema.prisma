// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Advisor {
    siape          Int                  @id
    nome           String
    email          String               @unique
    senha          String
    tipo_professor String
    sugestao       Suggestion[]
    projeto        Project[] // essa é a referencia do projeto ao orientador
    projetos       ProjectsOnAdvisors[] // essa é a referencia do projeto aos avaliadores
    created_at     DateTime             @default(now())
    updated_at     DateTime             @updatedAt

    @@map(name: "professor")
}

model Student {
    matricula  Int      @id
    nome       String
    email      String   @unique
    senha      String
    projeto    Project?
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt

    @@map(name: "aluno")
}

model Project {
    id               Int                  @id @default(autoincrement())
    titulo           String
    aluno            Student              @relation(fields: [mat_aluno], references: [matricula])
    mat_aluno        Int                  @unique
    orientador       Advisor              @relation(fields: [siape_orientador], references: [siape])
    siape_orientador Int
    avaliadores      ProjectsOnAdvisors[]
    versoes          Version[]
    created_at       DateTime             @default(now())
    updated_at       DateTime             @updatedAt

    @@map(name: "projeto")
}

model ProjectsOnAdvisors {
    projeto    Project  @relation(fields: [id_projeto], references: [id])
    id_projeto Int
    avaliador  Advisor  @relation(fields: [siape], references: [siape])
    siape      Int
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt

    @@id([id_projeto, siape])
    @@map(name: "avaliador_projeto")
}

model Version {
    id         Int          @id @default(autoincrement())
    projeto    Project      @relation(fields: [id_projeto], references: [id])
    id_projeto Int
    arquivo    String
    sugestoes  Suggestion[]
    created_at DateTime     @default(now())
    updated_at DateTime     @updatedAt

    @@map(name: "versao")
}

model Suggestion {
    id              Int      @id @default(autoincrement())
    texto           String   @db.VarChar(500)
    arquivo         String
    professor       Advisor  @relation(fields: [siape_professor], references: [siape])
    siape_professor Int
    versao          Version  @relation(fields: [id_versao], references: [id])
    id_versao       Int
    created_at      DateTime @default(now())
    updated_at      DateTime @updatedAt

    @@map(name: "sugestao")
}
